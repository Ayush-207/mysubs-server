import type { AnyProcedure } from '../../src/core';
import type { inferObservableValue } from '../../src/observable';
import type { DefaultDataTransformer } from '../../src/transformer';
import type { Serialize } from '../../src/shared/internal/serialize';
/**
 * @internal
 */
export type inferTransformedProcedureOutput<TProcedure extends AnyProcedure> = TProcedure['_def']['_config']['transformer'] extends DefaultDataTransformer ? Serialize<TProcedure['_def']['_output_out']> : TProcedure['_def']['_output_out'];
export type inferTransformedSubscriptionOutput<TProcedure extends AnyProcedure> = TProcedure['_def']['_config']['transformer'] extends DefaultDataTransformer ? Serialize<inferObservableValue<TProcedure['_def']['_output_out']>> : inferObservableValue<TProcedure['_def']['_output_out']>;
//# sourceMappingURL=jsonify.d.ts.map